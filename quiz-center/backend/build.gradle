buildscript {
    project.ext {
        bootVersion = '2.0.3.RELEASE'
        nexusUsername = project.hasProperty('nexusUsername') ? project.getProperty('nexusUsername') : ''
        nexusPassword = project.hasProperty('nexusPassword') ? project.getProperty('nexusPassword') : ''
        nexusUrl = project.hasProperty('nexusUrl') ? project.getProperty('nexusUrl') : ''
    }

    repositories {
        maven {
            url 'http://ec2-54-222-235-15.cn-north-1.compute.amazonaws.com.cn:8081/repository/maven-public/'
        }
        maven {
            url 'http://ec2-54-222-235-15.cn-north-1.compute.amazonaws.com.cn:8081/repository/gradle-m2/'
        }
    }

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"
		classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:1.2.1.RELEASE"
	    classpath "org.flywaydb:flyway-gradle-plugin:5.1.4"
    }
}

plugins {
    id 'org.sonarqube' version '2.6.2'
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.flywaydb.flyway"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "spring-cloud-contract"
apply plugin: "groovy"
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
group 'cn.thoughtworks.school.quizCenter'

repositories {
    maven {
        url 'http://ec2-54-222-235-15.cn-north-1.compute.amazonaws.com.cn:8081/repository/maven-public/'
    }
    maven { url 'https://jitpack.io' } // for com.github.everit-org.json-schema:org.everit.json.schema:1.9.1
    mavenCentral()

}

sourceCompatibility = 1.8

publishing {
    repositories {
        maven {
            url nexusUrl
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-devtools'
	compile 'org.springframework.cloud:spring-cloud-starter-config'
	compile 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	compile 'mysql:mysql-connector-java'
    compile 'org.flywaydb:flyway-core'
	compile 'org.apache.httpcomponents:httpclient:4.4'
	compile 'org.apache.httpcomponents:httpmime:4.4'
	compile 'org.json:json:20180130'
	compile 'com.h2database:h2:1.3.148'
	compile 'commons-io:commons-io:2.5'
    compile 'one.util:streamex:0.6.7'
    compile 'com.github.everit-org.json-schema:org.everit.json.schema:1.9.1'
    compile 'org.apache.commons:commons-lang3:3.7'
	compile 'com.amazonaws:aws-java-sdk-s3:1.11.311'
	compile 'com.amazonaws:aws-java-sdk-core:1.11.311'
    compileOnly 'org.projectlombok:lombok'
    

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testCompile 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'junit:junit:4.12'
}

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom 'org.springframework.cloud:spring-cloud-contract-dependencies:1.2.1.RELEASE'
    }
}

contracts {
    packageWithBaseClasses = 'cn.thoughtworks.school.contract'
}

test {
    systemProperty 'spring.profiles.active', 'test'
}

flyway {
    url = 'jdbc:mysql://localhost:3306/QuizCenter?useUnicode=yes&characterEncoding=UTF-8'
    user = 'root'
    password = 'pass'
}

task flywayCleanTestDatabase(type: org.flywaydb.gradle.task.FlywayCleanTask) {
    url = 'jdbc:mysql://localhost:3307/QuizCenter?useUnicode=yes&characterEncoding=UTF-8'
    user = 'root'
    password = 'pass'
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://sonar.dev.school.thoughtworks.cn'
        property 'sonar.login', System.getenv('sonarLoginToken')
        property 'sonar.projectName', 'quiz-center-backend'
        property 'sonar.projectKey', 'quiz-center-backend'
    }
}
