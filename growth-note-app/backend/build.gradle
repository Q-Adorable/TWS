
buildscript {
    project.ext {
        bootVersion = '2.0.4.RELEASE'
        nexusUsername = project.hasProperty('nexusUsername') ? project.getProperty('nexusUsername') : ''
        nexusPassword = project.hasProperty('nexusPassword') ? project.getProperty('nexusPassword') : ''
        nexusUrl = project.hasProperty('nexusUrl') ? project.getProperty('nexusUrl') : ''
    }

    repositories {
        maven {
            url 'http://ec2-54-222-235-15.cn-north-1.compute.amazonaws.com.cn:8081/repository/maven-public/'
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.1.RELEASE"
        classpath "org.flywaydb:flyway-gradle-plugin:5.0.7"
    }
}
plugins{
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.flywaydb.flyway"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "spring-cloud-contract"
apply plugin: "groovy"
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

group 'cn.thoughtworks.school.practiseDiaryCenter'
version = '0.0.1-SNAPSHOT'

repositories {
    maven {
        url 'http://ec2-54-222-235-15.cn-north-1.compute.amazonaws.com.cn:8081/repository/maven-public/'
    }
}

sourceCompatibility = 1.8

publishing {
    repositories {
        maven {
            url nexusUrl
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

dependencies {
    compile('mysql:mysql-connector-java')
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework:spring-context-support')
	compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile("org.flywaydb:flyway-core:5.0.6")

    runtime( 'net.sf.ehcache:ehcache')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.rest-assured:rest-assured:3.0.3')
    testCompile 'org.springframework:spring-test'

    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile "org.springframework.cloud:spring-cloud-starter-contract-verifier"
    testCompile('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.0.1.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-actuator")
}

ext {
    springCloudVersion = 'Finchley.SR1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom 'org.springframework.cloud:spring-cloud-contract-dependencies:2.0.1.RELEASE'
    }
}

contracts {
    packageWithBaseClasses = 'cn.thoughtworks.school'
}

bootRun {
    sourceResources sourceSets.main
}
sonarqube {
    properties {
        property 'sonar.host.url', 'http://sonar.dev.school.thoughtworks.cn'
        property 'sonar.login', System.getenv('sonarLoginToken')
        property 'sonar.projectName', 'growth-note-app-backend'
        property 'sonar.projectKey', 'growth-note-app-backend'
    }
}



